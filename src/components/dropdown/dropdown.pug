mixin dropdown(options)
    - 
        const {
            title,
            additionalTitle,
            placeholder,
            name,
            type,
            value,
            withTotalValue,
            hasApplyButton,
            hasClearButton,
            dropdownList,
        } = options;

    - const containerClasses = [`dropdown__${withTotalValue ? "with" : "without"}-total-value`];

    div(class=["dropdown"].concat(containerClasses))
        p(class=["dropdown__title"])
            span(class=["dropdown__title-text"])= title
            - if(additionalTitle)
                span(class=["dropdown__additional-title-text"])= additionalTitle
        div(class=["dropdown__input-container"] data-default-value=value)
            input(class=["dropdown__input"], 
                placeholder= placeholder,
                name=name,
                type=type,
                value=value,
                readonly=true)
            p(class=['dropdown__dropdown-arrow']) expand_more
            div(class=["dropdown__droped-list"]
                style={display: "none"})
                - for(let item of dropdownList)
                    div(class=["dropdown__list-item"])
                        p(class=["dropdown__item-name"])= item.name
                        div(class=["dropdown__item-handler"])
                            button(class=["dropdown__item-minus"])= "-"
                            p(class=["dropdown__item-value"])= item.value
                            button(class=["dropdown__item-plus"])= "+"
                - if(hasApplyButton || hasClearButton)
                    div(class=["dropdown__control-buttons-container"])
                        - if(hasClearButton)
                            p(class=["dropdown__clear-button"]) очистить
                        - if(hasApplyButton)
                            p(class=["dropdown__apply-button"]) применить