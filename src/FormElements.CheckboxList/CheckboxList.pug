mixin getCheckbox(checkboxType, checkboxList, options, classArray)

    - let containerClasses = ["checkboxList"];
    - let titleContainerClasses = ["checkboxList__title"];
    - let labelTextClasses = [];
    - if(checkboxType === "expandable"){
    -    containerClasses.push("checkboxList_expandable");
    -    labelTextClasses.push("checkboxList__itemLabelText");
    - }
    - else if(checkboxType === "rich"){
    -    titleContainerClasses.push("checkboxList__titleText_richTitleBottomMargin");
    -    labelTextClasses.push("checkboxList__itemLabelMainText");
    - }
    - else if(checkboxType === "simple"){
    -    titleContainerClasses.push("checkboxList__titleText_simpleTitleBottomMargin");
    -    labelTextClasses.push("checkboxList__itemLabelSimpleText"); 
    - }

    div(class=containerClasses)
        div(class=titleContainerClasses)
            p(class=["checkboxList__titleText"])= options.titleText
            if checkboxType === "expandable"
                p(class=["checkboxList__dropdownButton"]) expand_more
        div(class=["checkboxList__list"] data-is-opened=options.isOpened)
            for item in checkboxList
                div(class=["checkboxList__item"])
                    label(class=["checkboxList__itemLabel"])
                        input(class=["checkboxList__itemCheckbox"] type= "checkbox" checked= item.isChecked)
                        div(class=["checkboxList__itemCheckboxVisiblePart"])
                        p(class=labelTextClasses)= item.text
                    if checkboxType === "rich"
                        p(class=["checkboxList__itemLabelAdditionalText"])= item.additionalText  